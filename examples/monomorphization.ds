include "bignum.ds"
include "linkedlists.ds"

template Result<R> {
    data: R,
    err: String,

    fn Result<R>(self: Result<R>) -> Result<R> {
        return self;
    }

    fn Result<R>(self: Result<R>, val: R) -> Result<R> {
        val.__INCREF__();
        self.data = val;
        return self;
    }

    fn get_res(self: Result<R>) -> R {
        return self.data;
    }
}


fn main(argc: int, argv: string*) -> int {
    let mut a: Result<String> = Result<String>(String("foo"));
    let mut str: String = a.get_res();
    println(str);
    let mut b: Result<BigInt> = Result<BigInt>(BigInt(5));
    let mut num: BigInt = b.get_res();
    println(num);
    prinln("");
    let mut a: LinkedList<BigInt> = LinkedList<BigInt>(BigInt(1));
    println("Adding");
    a.add_next(BigInt(2)).add_next(BigInt(3)).add_next(BigInt(4)).__DECREF__();
    println("Added\n\n");
    let mut next: int = a.has_next;
    while (next != 0) {
        println("val: %s", a);
        next = a.has_next;
        if (next != 0) {
            a = a.get_next();
        }
    }
    println("Done");
    return 0;
}
