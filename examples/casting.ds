fn main() -> int {
    let integer: int = 5;
    let longint: long = 10;
    let floating: float = 7.5;
    let str: string = "6";

    print("To int\n");
    // float to int
    print("%d\n", ftoi(floating));
    // long to int
    print("%d\n", ltoi(longint));
    // string to int
    print("%d\n", stoi(str));

    print("To float\n");
    // int to float
    print("%f\n", itof(integer));
    // long to float
    print("%f\n", ltof(longint));
    // string to float
    print("%f\n", stof(str));

    print("To long\n");
    // int to long
    print("%ld\n", itol(integer));
    // float to long
    print("%ld\n", ftol(floating));
    // string to long
    print("%ld\n", stol(str));

    print("To string\n");
    // To string methods return heap allocated objects and need to be free when no longer used.
    // int to string
    let s: string = itos(integer);
    print("%s\n", s);
    del(s);
    // long to string
    let s: string = ltos(longint);
    print("%s\n", s);
    del(s);
    // float to string
    let s: string = ftos(floating);
    print("%s\n", s);
    del(s);
    return 1;
}
