struct Foo {
    a: int,
    b: int,

    fn Foo(self: Foo) -> Foo {
        self.a = 10;
        self.b = 10;
        return self;
    }

    fn Foo(self: Foo, n: int) -> Foo {
        self.a = n;
        self.b = 10;
        return self;
    }

    fn inc(self: Foo) -> Foo {
        self.a = self.a + 1;
        self.b = self.b + 2;
        return self;
    }

    fn _geta(self: Foo) -> int {
        return self.a;
    }

    fn _getb(self: Foo) -> int {
        return self.b;
    }

    fn __str__(self: Foo) -> string {
        let mut str: String = String(self._geta()) + String(", ") + String(self._getb());
        return print_str(str.str);
    }
}


fn main(argc: int, argv: string*) -> int {
    let mut s: Foo = Foo(5);
    print("%s\n", s);
    s.inc();
    print("%s\n", s);
    s.inc();
    print("%s\n", s);
    s.inc();
    print("%s\n", s);
    return 0;
}
