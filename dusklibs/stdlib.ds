extern copyi(arr: int*, n: int) -> int*;
extern copyd(arr: float*, n: int) -> float*;
extern copys(arr: string, n: int) -> string;
extern copysa(arr: string*, n: int) -> string*;

extern ialloc(n: int) -> int*;
extern falloc(n: int) -> float*;

extern del(arr: int*) -> int;

extern ftoi(a: float) -> int;
extern ftos(a: float) -> string;

extern itof(a: int) -> float;
extern itos(a: int) -> string;

extern ltof(a: long) -> float;
extern ltoi(a: long) -> int;
extern ltos(a: long) -> string;

extern stoi(a: string) -> int;
extern stof(a: string) -> float;

extern input() -> string;
extern readfile(filename: string) -> string;

extern count_substr(str: string, substr: string) -> int;
extern split(str: string, on: string) -> string*;

extern intvec() -> void*;
extern ipush_back(vec: void*, val: int);
extern printveci(vec: void*);
extern getveci(vec: void*, idx: int) -> int;
extern sizeveci(vec: void*) -> int;

extern floatvec() -> void*;
extern fpush_back(vec: void*, val: float);
extern printvecf(vec: void*);
extern getvecf(vec: void*, idx: int) -> float;
extern sizevecf(vec: void*) -> int;

fn vec<int>() -> void* {
    return intvec();
}
fn push_back<int>(vec: void*, n: int) {
    ipush_back(vec, n);
}

fn get<int>(vec: void*, idx: int) -> int {
    return getveci(vec, idx);
}

fn size(vec: void*) -> int {
    return sizeveci(vec);
}

fn vec<float>() -> void* {
    return floatvec();
}

fn push_back<float>(vec: void*, n: float) {
    fpush_back(vec, n);
}

fn get<float>(vec: void*, idx: int) -> float {
    return getvecf(vec, idx);
}

fn split<int>(mut vec: void*, str: string, on: string){
    let count: int = count_substr(str, on) + 1;
    let split_str: string* = split(str, on);
    for (let mut i: int = 0; i < count; i = i + 1) {
        ipush_back(vec, stoi(split_str[i]));
    }
}

fn split<float>(mut vec: void*, str: string, on: string){
    let count: int = count_substr(str, on) + 1;
    let split_str: string* = split(str, on);
    for (let mut i: int = 0; i < count; i = i + 1) {
        fpush_back(vec, stof(split_str[i]));
    }
}
